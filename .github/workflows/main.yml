name: CI/CD Pipeline for Dockerized Node.js App

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build_and_push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Amazon ECR
      run: |
        aws --version
        aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin 390402551854.dkr.ecr.ap-south-1.amazonaws.com

#######

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Ensure ECR repository exists
      run: |
        REPO_NAME=${{ secrets.REPO_NAME }}
        aws ecr describe-repositories --repository-name $REPO_NAME || aws ecr create-repository --repository-name $REPO_NAME





    - name: Get commit hash
      id: get-commit-hash
      run: echo "::set-output name=commit-hash::$(git rev-parse --short HEAD)"

    - name: Get timestamp
      id: get-timestamp
      run: echo "::set-output name=timestamp::$(date +'%Y-%m-%d-%H-%M')"

    - name: Build, tag, and push the image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ secrets.REPO_NAME }}
        IMAGE_TAG: ${{ steps.get-commit-hash.outputs.commit-hash }}-${{ steps.get-timestamp.outputs.timestamp }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG






















#    - name: Build Docker image
  #    run: |
   #     REPOSITORY_URI=390402551854.dkr.ecr.ap-south-1.amazonaws.com/actions-docker
    #    COMMIT_HASH=$(echo $GITHUB_SHA | cut -c 1-7)
     #   IMAGE_TAG=${COMMIT_HASH:-latest}
      #  docker build -t $REPOSITORY_URI:latest .
       # docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG








        ##
    #- name: Push Docker image to ECR
      #run: |
        #docker push $REPOSITORY_URI:latest
        #docker push $REPOSITORY_URI:$IMAGE_TAG




    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16'

    - name: Install dependencies
      run: |
        npm install

    - name: Run tests
      run: |
        npm test

    - name: Deploy to AWS ECS
      run: |
        CLUSTER_NAME=my-cluster
        SERVICE_NAME=my-service
        TASK_DEFINITION=actions-docker
        IMAGE_URI=$REPOSITORY_URI:$IMAGE_TAG
        aws ecs update-service --cluster $CLUSTER_NAME --service $SERVICE_NAME --force-new-deployment --region ap-south-1 --task-definition $TASK_DEFINITION --desired-count 2
