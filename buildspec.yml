version: 0.2

phases:
  install:
    runtime-versions:
      nodejs: latest
    commands:
      - nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://127.0.0.1:2375 --storage-driver=overlay2 &
      - timeout 15 sh -c "until docker info; do echo .; sleep 1; done"
  #pre_build:
    #commands:
      #- echo log in to Amazon ECR...
      #- aws --version
      #- echo $AWS_DEFAULT_REGION
      #- $(aws ecr get-login --no-include-email --region ap-south-1)
      #- REPOSITORY_URI=${{ REPO }}
      #- COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      #- IMAGE_TAG=${COMMIT_HASH:=latest}

############ rohan code
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws --version
      - aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin 390402551854.dkr.ecr.ap-south-1.amazonaws.com
      - REPOSITORY_URI=390402551854.dkr.ecr.ap-south-1.amazonaws.com/aws-ecs-docker
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
      #- CONTAINER_NAME="booking-service"
      #- AWS_TASK_DEFINATION_NAME="booking-service"
      #- REGION="ca-central-1"
      #- CONTAINER_PORT="3010"


  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image.
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo write definitions file...
      - printf '[{"name":"exp-code-pipeline","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
artifacts:
  files: imagedefinitions.json
